// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PhaethonMotors_Backend.Data;

#nullable disable

namespace PhaethonMotors_Backend.Migrations
{
    [DbContext(typeof(PhaethonDbContext))]
    [Migration("20250206162253_seedDBimgration")]
    partial class seedDBimgration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CarModelColorOption", b =>
                {
                    b.Property<string>("CarModelsId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ColorsId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("CarModelsId", "ColorsId");

                    b.HasIndex("ColorsId");

                    b.ToTable("CarModelColorOptions", (string)null);
                });

            modelBuilder.Entity("CarModelFeatureOption", b =>
                {
                    b.Property<string>("CarModelsId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FeaturesId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("CarModelsId", "FeaturesId");

                    b.HasIndex("FeaturesId");

                    b.ToTable("CarModelFeatureOptions", (string)null);
                });

            modelBuilder.Entity("CarModelInteriorOption", b =>
                {
                    b.Property<string>("CarModelsId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("InteriorsId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("CarModelsId", "InteriorsId");

                    b.HasIndex("InteriorsId");

                    b.ToTable("CarModelInteriorOptions", (string)null);
                });

            modelBuilder.Entity("CarModelTrimOption", b =>
                {
                    b.Property<string>("CarModelsId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TrimsId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("CarModelsId", "TrimsId");

                    b.HasIndex("TrimsId");

                    b.ToTable("CarModelTrimOptions", (string)null);
                });

            modelBuilder.Entity("CarModelWheelOption", b =>
                {
                    b.Property<string>("CarModelsId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("WheelsId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("CarModelsId", "WheelsId");

                    b.HasIndex("WheelsId");

                    b.ToTable("CarModelWheelOptions", (string)null);
                });

            modelBuilder.Entity("PhaethonMotors_Backend.Models.CarModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Acceleration")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("BasePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CarImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("CargoSpace")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("DriveType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FuelType1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FuelType2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Horsepower")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SeatingCapacity")
                        .HasColumnType("int");

                    b.Property<decimal>("TopSpeed")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Torque")
                        .HasColumnType("int");

                    b.Property<string>("Transmission")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CarModels");
                });

            modelBuilder.Entity("PhaethonMotors_Backend.Models.ColorOption", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("HexCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("ColorOptions");
                });

            modelBuilder.Entity("PhaethonMotors_Backend.Models.FeatureOption", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("FeatureOptions");
                });

            modelBuilder.Entity("PhaethonMotors_Backend.Models.InteriorOption", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Material")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("InteriorOptions");
                });

            modelBuilder.Entity("PhaethonMotors_Backend.Models.TrimOption", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("HorsepowerIncrease")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PriceIncrease")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Suspension")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TrimOptions");
                });

            modelBuilder.Entity("PhaethonMotors_Backend.Models.WheelOption", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("WheelOptions");
                });

            modelBuilder.Entity("CarModelColorOption", b =>
                {
                    b.HasOne("PhaethonMotors_Backend.Models.CarModel", null)
                        .WithMany()
                        .HasForeignKey("CarModelsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PhaethonMotors_Backend.Models.ColorOption", null)
                        .WithMany()
                        .HasForeignKey("ColorsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CarModelFeatureOption", b =>
                {
                    b.HasOne("PhaethonMotors_Backend.Models.CarModel", null)
                        .WithMany()
                        .HasForeignKey("CarModelsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PhaethonMotors_Backend.Models.FeatureOption", null)
                        .WithMany()
                        .HasForeignKey("FeaturesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CarModelInteriorOption", b =>
                {
                    b.HasOne("PhaethonMotors_Backend.Models.CarModel", null)
                        .WithMany()
                        .HasForeignKey("CarModelsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PhaethonMotors_Backend.Models.InteriorOption", null)
                        .WithMany()
                        .HasForeignKey("InteriorsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CarModelTrimOption", b =>
                {
                    b.HasOne("PhaethonMotors_Backend.Models.CarModel", null)
                        .WithMany()
                        .HasForeignKey("CarModelsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PhaethonMotors_Backend.Models.TrimOption", null)
                        .WithMany()
                        .HasForeignKey("TrimsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CarModelWheelOption", b =>
                {
                    b.HasOne("PhaethonMotors_Backend.Models.CarModel", null)
                        .WithMany()
                        .HasForeignKey("CarModelsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PhaethonMotors_Backend.Models.WheelOption", null)
                        .WithMany()
                        .HasForeignKey("WheelsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
